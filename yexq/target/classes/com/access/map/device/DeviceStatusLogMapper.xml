<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.access.dao.device.DeviceStatusLogMapper" >
  <resultMap id="BaseResultMap" type="com.access.model.device.DeviceStatusLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="status_message" property="statusMessage" jdbcType="VARCHAR" />
    <result column="up_traffic" property="upTraffic" jdbcType="BIGINT" />
    <result column="down_traffic" property="downTraffic" jdbcType="BIGINT" />
    <result column="create_datetime" property="createDatetime" jdbcType="TIMESTAMP" />
    <result column="device_id" property="deviceId" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="getTrafficByDeviceIdMap" type="com.access.model.device.DeviceWithBLOBs" >
    <id column="device_id" property="deviceId" jdbcType="VARCHAR" />
    <result column="create_datetime" property="createDatetime" jdbcType="TIMESTAMP" />
    <result column="up_traffic" property="upTraffic" jdbcType="BIGINT" />
    <result column="down_traffic" property="downTraffic" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, status_message, up_traffic, down_traffic, create_datetime, device_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from device_status_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from device_status_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.access.model.device.DeviceStatusLog" >
    insert into device_status_log (id, type, status_message, 
      up_traffic, down_traffic, create_datetime, 
      device_id)
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{statusMessage,jdbcType=VARCHAR}, 
      #{upTraffic,jdbcType=BIGINT}, #{downTraffic,jdbcType=BIGINT}, #{createDatetime,jdbcType=TIMESTAMP}, 
      #{deviceId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.access.model.device.DeviceStatusLog" >
    insert into device_status_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="statusMessage != null" >
        status_message,
      </if>
      <if test="upTraffic != null" >
        up_traffic,
      </if>
      <if test="downTraffic != null" >
        down_traffic,
      </if>
      <if test="createDatetime != null" >
        create_datetime,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="statusMessage != null" >
        #{statusMessage,jdbcType=VARCHAR},
      </if>
      <if test="upTraffic != null" >
        #{upTraffic,jdbcType=BIGINT},
      </if>
      <if test="downTraffic != null" >
        #{downTraffic,jdbcType=BIGINT},
      </if>
      <if test="createDatetime != null" >
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.access.model.device.DeviceStatusLog" >
    update device_status_log
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="statusMessage != null" >
        status_message = #{statusMessage,jdbcType=VARCHAR},
      </if>
      <if test="upTraffic != null" >
        up_traffic = #{upTraffic,jdbcType=BIGINT},
      </if>
      <if test="downTraffic != null" >
        down_traffic = #{downTraffic,jdbcType=BIGINT},
      </if>
      <if test="createDatetime != null" >
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.access.model.device.DeviceStatusLog" >
    update device_status_log
    set type = #{type,jdbcType=VARCHAR},
      status_message = #{statusMessage,jdbcType=VARCHAR},
      up_traffic = #{upTraffic,jdbcType=BIGINT},
      down_traffic = #{downTraffic,jdbcType=BIGINT},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      device_id = #{deviceId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="getTrafficByDeviceId" parameterType="java.util.Map" resultMap="getTrafficByDeviceIdMap">
		SELECT dsl.device_id, dsl.create_datetime,
		(case d.status
				 when 'ONLINE' then IFNULL(dsl.up_traffic, 0)
				 else 0 end) as up_traffic,
		(case d.status
			 when 'ONLINE' then IFNULL(dsl.down_traffic, 0)
			 else 0 end) as down_traffic
		from device_status_log as dsl, device as d
		where dsl.device_id=d.device_id
		<if test="type != null">
			and dsl.type = #{type, jdbcType=VARCHAR}
		</if>
		and dsl.device_id = #{deviceId, jdbcType=VARCHAR}
		ORDER BY dsl.create_datetime DESC
		LIMIT 0,1
	</select>
	
  <select id="getDeviceLatestOnlineLog" parameterType="java.lang.String" resultMap="BaseResultMap">
	select 
		<include refid="Base_Column_List" />
	from device_status_log as dsl
	join ( select 
			device_id as off_device_id, 
			create_datetime as off_datetime from device_status_log
	        where device_id = #{deviceId} 
	        	and UPPER(type) = 'OFFLINE' order by id desc limit 1) as dsl1 
		on dsl.device_id = dsl1.off_device_id
	where
	    device_id = #{deviceId} and UPPER(dsl.type) = 'HEARTBEAT' 
	    and dsl.create_datetime > dsl1.off_datetime order by id 
	limit 1
  </select>
  
  <select id="getDeviceLatestLog" parameterType="java.lang.String" resultMap="BaseResultMap">
	select 
		<include refid="Base_Column_List" />
	from device_status_log as dsl
	where
	    device_id = #{deviceId} 
	    order by id desc 
	limit 1
  </select>
</mapper>