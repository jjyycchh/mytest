<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.access.dao.user.TerminalUserHasDeviceMapper" >
  <resultMap id="BaseResultMap" type="com.access.model.user.TerminalUserHasDevice" >
    <result column="terminal_user_id" property="terminalUserId" jdbcType="BIGINT" />
    <result column="device_id" property="deviceId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    terminal_user_id, device_id, status
  </sql>
  <insert id="insert" parameterType="com.access.model.user.TerminalUserHasDevice" >
    insert into terminal_user_has_device (terminal_user_id, device_id, status
      )
    values (#{terminalUserId,jdbcType=BIGINT}, #{deviceId,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.access.model.user.TerminalUserHasDevice" >
    insert into terminal_user_has_device
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="terminalUserId != null" >
        terminal_user_id,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="terminalUserId != null" >
        #{terminalUserId,jdbcType=BIGINT},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <!-- 记录不存在时插入新记录 -->
  <insert id="insertNotExist" parameterType="com.access.model.user.TerminalUserHasDevice">
  	insert into terminal_user_has_device(
       	terminal_user_id,
       	 <if test="status != null" >
          status,
      	</if>
       	device_id
       )
	select 
		#{terminalUserId,jdbcType=BIGINT},
		<if test="status != null" >
			#{status,jdbcType=VARCHAR},
		</if>   
		#{deviceId,jdbcType=VARCHAR}   
	from 
		dual where not exists(
			select 
				1 
			from 
				terminal_user_has_device 
			where 
				terminal_user_id = #{terminalUserId, jdbcType = BIGINT}
			and 
				device_id = #{deviceId,jdbcType=VARCHAR});
  </insert>
  
  <update id="updateUserDeviceStatus" parameterType="com.access.model.user.TerminalUserHasDevice">
  	update terminal_user_has_device set status = #{status,jdbcType=VARCHAR}
  	where terminal_user_id = #{terminalUserId,jdbcType=BIGINT}
  	and device_id = #{deviceId,jdbcType=VARCHAR}
  </update>
  
    <select id="getRecordsByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
	    select 
	    	<include refid="Base_Column_List" />
	    from terminal_user_has_device
	    where terminal_user_id = #{value }
    </select>
  
    <!-- 根据用户ID和设备ID获取一条记录 -->
	<select id="selectByUserIdAndDeviceId" parameterType="java.util.Map" resultMap="BaseResultMap">
		select 
			<include refid="Base_Column_List" />
		from 
			terminal_user_has_device
		where 
			terminal_user_id = #{terminalUserId,jdbcType=BIGINT}
		and 
			device_id = #{deviceId,jdbcType=VARCHAR}
	</select>

	<update id="updateUserDeviceStatusByUserIdAndDeviceId" parameterType="java.util.Map">
		update 
			terminal_user_has_device 
		set 
			status = #{status,jdbcType=VARCHAR}
  		where 
  			terminal_user_id = #{terminalUserId,jdbcType=BIGINT}
  		and 
  			device_id in
  			<foreach item="item" index="index" collection="deviceIdList" open="(" separator="," close=")">
				#{item}
  			</foreach>
	</update>
  
</mapper>