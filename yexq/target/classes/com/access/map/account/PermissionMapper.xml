<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.access.dao.account.PermissionMapper" >
  <resultMap id="BaseResultMap" type="com.access.model.account.Permission" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="perm_code" property="permCode" jdbcType="VARCHAR" />
    <result column="default_account_type" property="defaultAccountType" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.access.model.account.Permission" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, perm_code, default_account_type
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.access.model.account.Permission" >
    insert into permission (id, name, perm_code, 
      default_account_type, description)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{permCode,jdbcType=VARCHAR}, 
      #{defaultAccountType,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.access.model.account.Permission" >
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="permCode != null" >
        perm_code,
      </if>
      <if test="defaultAccountType != null" >
        default_account_type,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="permCode != null" >
        #{permCode,jdbcType=VARCHAR},
      </if>
      <if test="defaultAccountType != null" >
        #{defaultAccountType,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.access.model.account.Permission" >
    update permission
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="permCode != null" >
        perm_code = #{permCode,jdbcType=VARCHAR},
      </if>
      <if test="defaultAccountType != null" >
        default_account_type = #{defaultAccountType,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.access.model.account.Permission" >
    update permission
    set name = #{name,jdbcType=VARCHAR},
      perm_code = #{permCode,jdbcType=VARCHAR},
      default_account_type = #{defaultAccountType,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.access.model.account.Permission" >
    update permission
    set name = #{name,jdbcType=VARCHAR},
      perm_code = #{permCode,jdbcType=VARCHAR},
      default_account_type = #{defaultAccountType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="getListByPermCode" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from permission
    where perm_code in
    <foreach item="item" index="index" collection="array" open="(" separator="," close=")">  
	  #{item}  
	 </foreach>
  </select>
  
  <select id="getPermListByAccountId" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select 
    <include refid="Base_Column_List" />
    from permission as p, permission_has_account pa
    where p.id=pa.permission_id 
    and pa.account_id=#{value}
  </select>
</mapper>