<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.access.dao.system.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.access.model.system.Message" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sender_id" property="senderId" jdbcType="BIGINT" />
    <result column="receiver_id" property="receiverId" jdbcType="VARCHAR" />
    <result column="owner_id" property="ownerId" jdbcType="BIGINT" />
    <result column="is_sent" property="isSent" jdbcType="BIT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="is_read" property="isRead" jdbcType="BIT" />
    <result column="is_flaged" property="isFlaged" jdbcType="BIT" />
    <result column="create_datetime" property="createDatetime" jdbcType="TIMESTAMP" />
    <result column="parent_msg_id" property="parentMsgId" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, sender_id, receiver_id, owner_id, is_sent, title, content, is_read, is_flaged, 
    create_datetime, parent_msg_id, type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from message
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.access.model.system.Message" >
    insert into message (id, sender_id, receiver_id, 
      owner_id, is_sent, title, 
      content, is_read, is_flaged, 
      create_datetime, parent_msg_id, type
      )
    values (#{id,jdbcType=BIGINT}, #{senderId,jdbcType=BIGINT}, #{receiverId,jdbcType=VARCHAR}, 
      #{ownerId,jdbcType=BIGINT}, #{isSent,jdbcType=BIT}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{isRead,jdbcType=BIT}, #{isFlaged,jdbcType=BIT}, 
      #{createDatetime,jdbcType=TIMESTAMP}, #{parentMsgId,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.access.model.system.Message" >
  	<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
	</selectKey>
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="senderId != null" >
        sender_id,
      </if>
      <if test="receiverId != null" >
        receiver_id,
      </if>
      <if test="ownerId != null" >
        owner_id,
      </if>
      <if test="isSent != null" >
        is_sent,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
      <if test="isFlaged != null" >
        is_flaged,
      </if>
      <if test="createDatetime != null" >
        create_datetime,
      </if>
      <if test="parentMsgId != null" >
        parent_msg_id,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="senderId != null" >
        #{senderId,jdbcType=BIGINT},
      </if>
      <if test="receiverId != null" >
        #{receiverId,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        #{ownerId,jdbcType=BIGINT},
      </if>
      <if test="isSent != null" >
        #{isSent,jdbcType=BIT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=BIT},
      </if>
      <if test="isFlaged != null" >
        #{isFlaged,jdbcType=BIT},
      </if>
      <if test="createDatetime != null" >
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentMsgId != null" >
        #{parentMsgId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.access.model.system.Message" >
    update message
    <set >
      <if test="senderId != null" >
        sender_id = #{senderId,jdbcType=BIGINT},
      </if>
      <if test="receiverId != null" >
        receiver_id = #{receiverId,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        owner_id = #{ownerId,jdbcType=BIGINT},
      </if>
      <if test="isSent != null" >
        is_sent = #{isSent,jdbcType=BIT},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead,jdbcType=BIT},
      </if>
      <if test="isFlaged != null" >
        is_flaged = #{isFlaged,jdbcType=BIT},
      </if>
      <if test="createDatetime != null" >
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentMsgId != null" >
        parent_msg_id = #{parentMsgId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.access.model.system.Message" >
    update message
    set sender_id = #{senderId,jdbcType=BIGINT},
      receiver_id = #{receiverId,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=BIGINT},
      is_sent = #{isSent,jdbcType=BIT},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      is_read = #{isRead,jdbcType=BIT},
      is_flaged = #{isFlaged,jdbcType=BIT},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      parent_msg_id = #{parentMsgId,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="message_findMessagePage" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select 
	    <include refid="Base_Column_List" />
  	from message
  	where 1 = 1
  		and owner_id = #{ownerId, jdbcType=BIGINT}
  		<if test="senderId != null">
			and sender_id = #{senderId, jdbcType=BIGINT}
		</if>
  		<if test="receiverId != null">
			and receiver_id like Concat('%"', #{receiverId,jdbcType=LONGVARCHAR}, '"%') 
		</if>
  		<if test="isRead != null">
			and is_read = #{isRead, jdbcType=BIT}
		</if>
		<if test="isFlaged != null">
			and is_flaged = 1
		</if>
		<if test="isGetSent != null">
			and is_sent = #{isGetSent, jdbcType=BIT}
		</if>
		<if test="keywords != null" >
			<foreach item="item" index="index"  collection="keywords" open="and (" separator="OR" close=")">  
			  Concat(title, IFNULL(content, '')) like Concat('%', #{item,jdbcType=VARCHAR}, '%')
			 </foreach>
	    </if>
  		<if test="startDate != null">
			<![CDATA[ and create_datetime >= #{startDate,jdbcType=TIMESTAMP} ]]>
		</if>
  		<if test="endDate != null">
			<![CDATA[ and create_datetime < #{endDate,jdbcType=TIMESTAMP} ]]>
		</if>
	order by create_datetime desc
  	limit #{page.begin},#{page.pageSize}
  </select>

  <select id="message_findMessagePageCount" parameterType="java.util.Map" resultType="java.lang.Integer">
  	select 
	    count(*)
  	from message
  	where 1 = 1
  	    and owner_id = #{ownerId,jdbcType=BIGINT}
  		<if test="senderId != null">
			and sender_id = #{senderId,jdbcType=BIGINT}
		</if>
  		<if test="receiverId != null">
			and receiver_id like Concat('%"', #{receiverId,jdbcType=LONGVARCHAR}, '"%') 
		</if>
  		<if test="isRead != null">
			and is_read = #{isRead, jdbcType=BIT}
		</if>
		<if test="isFlaged != null">
			and is_flaged = 1
		</if>
		<if test="isGetSent != null">
			and is_sent = #{isGetSent, jdbcType=BIT}
		</if>
		<if test="keywords != null" >
			<foreach item="item" index="index"  collection="keywords" open="and (" separator="OR" close=")">  
			  Concat(title, IFNULL(content, '')) like Concat('%', #{item,jdbcType=VARCHAR}, '%')
			 </foreach>
	    </if>
  		<if test="startDate != null">
			<![CDATA[ and create_datetime >= #{startDate,jdbcType=TIMESTAMP} ]]>
		</if>
  		<if test="endDate != null">
			<![CDATA[ and create_datetime < #{endDate,jdbcType=TIMESTAMP} ]]>
		</if>
  </select>
  
  <select id="selectByTypeAndOwnerId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    	<include refid="Base_Column_List" />
    from 
    	message
    where 
    	owner_id = #{ownerId,jdbcType=BIGINT}
    and
    	type = #{type, jdbcType=VARCHAR}
    order by
    	create_datetime DESC
    limit #{topSize}	
  </select>
  
</mapper>