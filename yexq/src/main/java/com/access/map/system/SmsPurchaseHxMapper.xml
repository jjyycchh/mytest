<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.access.dao.system.SmsPurchaseHxMapper" >
  <resultMap id="BaseResultMap" type="com.access.model.system.SmsPurchaseHx" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="outside_trade_id" property="outsideTradeId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="REAL" />
    <result column="sms_number" property="smsNumber" jdbcType="BIGINT" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="create_datetime" property="createDatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account_id, outside_trade_id, type, status, amount, sms_number, memo, create_datetime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sms_purchase_hx
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sms_purchase_hx
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.access.model.system.SmsPurchaseHx" >
  	<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
	</selectKey>
    insert into sms_purchase_hx (id, account_id, outside_trade_id, 
      type, status, amount, 
      sms_number, memo, create_datetime
      )
    values (#{id,jdbcType=BIGINT}, #{accountId,jdbcType=BIGINT}, #{outsideTradeId,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{amount,jdbcType=REAL}, 
      #{smsNumber,jdbcType=BIGINT}, #{memo,jdbcType=VARCHAR}, #{createDatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.access.model.system.SmsPurchaseHx" >
  	<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
	</selectKey>
    insert into sms_purchase_hx
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="outsideTradeId != null" >
        outside_trade_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="smsNumber != null" >
        sms_number,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="createDatetime != null" >
        create_datetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="outsideTradeId != null" >
        #{outsideTradeId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=REAL},
      </if>
      <if test="smsNumber != null" >
        #{smsNumber,jdbcType=BIGINT},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null" >
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.access.model.system.SmsPurchaseHx" >
    update sms_purchase_hx
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="outsideTradeId != null" >
        outside_trade_id = #{outsideTradeId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=REAL},
      </if>
      <if test="smsNumber != null" >
        sms_number = #{smsNumber,jdbcType=BIGINT},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null" >
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.access.model.system.SmsPurchaseHx" >
    update sms_purchase_hx
    set account_id = #{accountId,jdbcType=BIGINT},
      outside_trade_id = #{outsideTradeId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=REAL},
      sms_number = #{smsNumber,jdbcType=BIGINT},
      memo = #{memo,jdbcType=VARCHAR},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="smsPurchaseHx_getSmsPurchaseHxPage" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select sph.*
    from sms_purchase_hx as sph,
    	account as a
    where sph.account_id = a.id
    <if test="accountId != null">
		and a.id = #{accountId}
    </if>
	<if test="type != null">
		and a.type = #{type}
    </if>
    <if test="keywords != null">
		<foreach item="item" index="index"  collection="keywords" open="and (" separator="OR" close=")">  
		  Concat(IFNULL(sph.outside_trade_id, ''),
					IFNULL(sph.memo,'')) like Concat('%', #{item}, '%')
		 </foreach>
    </if>
    <if test="startDate != null">
		<![CDATA[ and sph.create_datetime >= #{startDate, jdbcType=TIMESTAMP} ]]>
	</if>
 		<if test="endDate != null">
		<![CDATA[ and sph.create_datetime < #{endDate, jdbcType=TIMESTAMP} ]]>
	</if>
	order by sph.create_datetime desc
	limit #{page.begin},#{page.pageSize}
  </select>
  
  <select id="smsPurchaseHx_getSmsPurchaseHxPageCount" parameterType="java.util.Map" resultType="java.lang.Integer">
  	select count(sph.id)
    from sms_purchase_hx as sph,
    	account as a
    where sph.account_id = a.id
    <if test="accountId != null">
		and a.id = #{accountId}
    </if>
	<if test="type != null">
		and a.type = #{type}
    </if>
    <if test="keywords != null">
		<foreach item="item" index="index"  collection="keywords" open="and (" separator="OR" close=")">  
		  Concat(IFNULL(sph.outside_trade_id, ''),
					IFNULL(sph.memo,'')) like Concat('%', #{item}, '%')
		 </foreach>
    </if>
    <if test="startDate != null">
		<![CDATA[ and sph.create_datetime >= #{startDate, jdbcType=TIMESTAMP} ]]>
	</if>
 	<if test="endDate != null">
		<![CDATA[ and sph.create_datetime < #{endDate, jdbcType=TIMESTAMP} ]]>
	</if>
  </select>
  
  <select id="selectByOutsideTradeId" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from sms_purchase_hx
    where outside_trade_id = #{value}
  </select>
  
</mapper>